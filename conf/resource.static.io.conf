##
# resource.static.io
##

# 建议同机部署Memcached，提高文件缓存响应速度
upstream assets_mc_server {
    server mc:11211;
    keepalive 512;
}

server {
    listen       80;
    server_name  resource.static.io;

    access_log  /data/log/resource.static.io-access.log;
    error_log   /data/log/resource.static.io-error.log;

    client_max_body_size 100m;
    server_name_in_redirect on;

    root        /data/public;
    index       index.html index.htm;

    location /memcache {
        internal;
        memc_connect_timeout 100ms;
        memc_send_timeout 100ms;
        memc_read_timeout 100ms;
        set $memc_key $query_string;
        # 5min 内存缓存
        set $memc_exptime 300;
        memc_pass assets_mc_server;
    }

    # 根据你的情况添加权限以及其他命令
    #location /your_flush_cmd {
    #    set $memc_cmd flush_all;
    #    memc_pass assets_mc_server;
    #}

    #location /your_stats_cmd {
    #    set $memc_cmd stats;
    #    memc_pass assets_mc_server;
    #}
    location /your_stats_cmd {
        set $memc_cmd stats;
        memc_pass assets_mc_server;
    }



    # 指定目录开启在线combo
    location /release {
        concat on;
        concat_unique on;
        concat_max_files 20;

        set $cache_key $request_uri;
        srcache_fetch GET /memcache $cache_key;
        srcache_store PUT /memcache $cache_key;
        add_header X-Cached-From $srcache_fetch_status;

        if (!-f $request_filename) {

            # 静态资源使用固定版本
            # http://www.static.io/resource/demo/stable/1.0.0/index.js
            # http://www.static.io/resource/demo/branch/1.0.0/index.js
            # http://www.static.io/resource/demo/branch/4621d373cade4e83/index.js
            rewrite "release\/(\w+)\/(\w+)\/(\d+\.\d+\.\d+|\S{8})\/(.*)$" /release/$1/$2/$3/$4 break;

            # 静态资源使用随机时间戳
            # http://www.static.io/resource/demo/201501011213/index.js
            rewrite "release\/(\w+)\/\d+\/(.*)$" /release/$1/stable/lastest/$2 break;

            # 项目静态页面
            # http://www.static.io/resource/demo/index.html
            rewrite "release\/(\w+)\/(.*\.html)$" /release/$1/stable/lastest/$2 break;
            # http://www.static.io/resource/demo/dev/index.html
            rewrite "release\/(\w+)\/dev\/(.*\.html)$" /release/$1/dev/$2 break;
        }
    }

    # 如机器被指定为某子目录资源
    location /resource {
        access_log  off;
        proxy_set_header    Host resource.static.io;
        proxy_pass          http://resource.static.io:80/release;
    }

    location / {
        proxy_redirect off;
        proxy_set_header Host               $host;
        proxy_set_header Accept-Encoding    "";
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;

        # 保障始终有内容返回
        echo '/** just static server, :d **/';
    }
}
